/* tslint:disable */
/* eslint-disable */
/**
 * GitHub Search Repositories (Simplified)
 * Simplified schema for GitHub\'s /search/repositories endpoint. Only required fields for client display are included. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IRepository } from './IRepository';
import {
    IRepositoryFromJSON,
    IRepositoryFromJSONTyped,
    IRepositoryToJSON,
    IRepositoryToJSONTyped,
} from './IRepository';

/**
 * 
 * @export
 * @interface IRepositorySearchResponse
 */
export interface IRepositorySearchResponse {
    /**
     * 
     * @type {number}
     * @memberof IRepositorySearchResponse
     */
    total_count: number;
    /**
     * 
     * @type {boolean}
     * @memberof IRepositorySearchResponse
     */
    incomplete_results: boolean;
    /**
     * 
     * @type {Array<IRepository>}
     * @memberof IRepositorySearchResponse
     */
    items: Array<IRepository>;
}

/**
 * Check if a given object implements the IRepositorySearchResponse interface.
 */
export function instanceOfIRepositorySearchResponse(value: object): value is IRepositorySearchResponse {
    if (!('total_count' in value) || value['total_count'] === undefined) return false;
    if (!('incomplete_results' in value) || value['incomplete_results'] === undefined) return false;
    if (!('items' in value) || value['items'] === undefined) return false;
    return true;
}

export function IRepositorySearchResponseFromJSON(json: any): IRepositorySearchResponse {
    return IRepositorySearchResponseFromJSONTyped(json, false);
}

export function IRepositorySearchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): IRepositorySearchResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'total_count': json['total_count'],
        'incomplete_results': json['incomplete_results'],
        'items': ((json['items'] as Array<any>).map(IRepositoryFromJSON)),
    };
}

export function IRepositorySearchResponseToJSON(json: any): IRepositorySearchResponse {
    return IRepositorySearchResponseToJSONTyped(json, false);
}

export function IRepositorySearchResponseToJSONTyped(value?: IRepositorySearchResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'total_count': value['total_count'],
        'incomplete_results': value['incomplete_results'],
        'items': ((value['items'] as Array<any>).map(IRepositoryToJSON)),
    };
}

